/** An end-to-end test of the cello compiler */

/* fn add = (a: i32, b: i32) -> i32 a + b; */
/* fn max = (a: i32, b: i32) -> i32 if a > b { a } else { b } */
/* fn max3 = (a: i32, b: i32, c: i32) -> i32 max(a, max(b, c)) */
/*  */
/* fn factorial = (x: i32) -> i32 { */
/*   if x == 0 { 1 } */
/*   else { x * factorial(x - 1) } */
/* } */

fn ret3 = () -> i32 3;

type Foo = struct {
  a: i32,
  b: i32,
  fn add = () -> i32 {
    a + b
  }
}

type int = i32

fn three = () -> int 3;

fn get_foo_ptr = (f: &Foo) -> &Foo f

fn deref = (a: &i32) -> i32 a.*

fn get_foo_a = (f: &Foo) -> i32 f.a

fn add_foo = (f: &Foo) -> i32 f.a + f.b